@page "/comunas"
@using BalanzaDigitalUg.Web.Data
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext DbContext
@rendermode InteractiveServer

<PageTitle>Mantenimiento de Comunas</PageTitle>

<div class="container py-4">
    <h3 class="mb-4">Mantenimiento de Comunas</h3>

    @if (!string.IsNullOrEmpty(_mensaje))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @_mensaje
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" @onclick="() => _mensaje = string.Empty"></button>
        </div>
    }

    <div class="row mb-4">
        <div class="col-lg-7 col-md-10 mx-auto">
            <h5 class="mb-3">@(_editando ? "Editar Comuna" : "Agregar Comuna")</h5>
            <EditForm Model="ComunaActual" OnValidSubmit="Guardar" FormName="comunaForm">
                <DataAnnotationsValidator/>
                <ValidationSummary/>
                <div class="mb-3">
                    <label class="form-label">Nombre</label>
                    <InputText class="form-control" @bind-Value="ComunaActual.Nombre" required />
                </div>
                <div class="d-flex gap-2">
                    <button type="submit" class="btn btn-success">Guardar</button>
                    @if (_editando)
                    {
                        <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
                    }
                </div>
            </EditForm>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8 col-md-10 mx-auto">
            @if (_comunas == null)
            {
                <p>Cargando...</p>
            }
            else if (_comunas.Count == 0)
            {
                <div class="alert alert-info">No hay comunas registradas.</div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-bordered align-middle">
                        <thead class="table-light">
                        <tr>
                            <th style="width:70%">Nombre</th>
                            <th style="width:30%">Acciones</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var comuna in _comunas)
                        {
                            <tr>
                                <td>@comuna.Nombre</td>
                                <td>
                                    <div class="d-flex gap-2">
                                        <button class="btn btn-primary btn-sm" title="Editar" @onclick="() => Editar(comuna)"><i class="bi bi-pencil"></i> Editar</button>
                                        <button class="btn btn-danger btn-sm" title="Eliminar" @onclick="() => Eliminar(comuna.Id)"><i class="bi bi-trash"></i> Eliminar</button>
                                    </div>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<Comuna>? _comunas;
    [SupplyParameterFromForm] private Comuna ComunaActual { get; set; } = new();
    private bool _editando = false;
    private string _mensaje = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await CargarComunas();
    }

    private async Task CargarComunas()
    {
        _comunas = await DbContext.Comunas.AsNoTracking().OrderBy(c => c.Nombre).ToListAsync();
    }

    private async Task Guardar()
    {
        if (string.IsNullOrWhiteSpace(ComunaActual.Nombre))
        {
            _mensaje = "El nombre de la comuna es obligatorio.";
            return;
        }
        if (_editando)
        {
            DbContext.Comunas.Update(ComunaActual);
            _mensaje = "Comuna actualizada correctamente.";
        }
        else
        {
            DbContext.Comunas.Add(ComunaActual);
            _mensaje = "Comuna agregada correctamente.";
        }
        await DbContext.SaveChangesAsync();
        await CargarComunas();
        ComunaActual = new();
        _editando = false;
    }

    private void Editar(Comuna comuna)
    {
        ComunaActual = new Comuna { Id = comuna.Id, Nombre = comuna.Nombre };
        _editando = true;
        _mensaje = string.Empty;
    }

    private async Task Eliminar(int id)
    {
        var comuna = await DbContext.Comunas.FindAsync(id);
        if (comuna == null) return;
        DbContext.Comunas.Remove(comuna);
        await DbContext.SaveChangesAsync();
        await CargarComunas();
        _mensaje = "Comuna eliminada correctamente.";
    }

    private void Cancelar()
    {
        ComunaActual = new();
        _editando = false;
        _mensaje = string.Empty;
    }
}

